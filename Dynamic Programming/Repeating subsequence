Given a string A, find if there is any subsequence that repeats itself. A subsequence of a string is defined 
as a sequence of characters generated by deleting some characters in the string without changing the order
of the remaining characters. NOTE : sub-sequence length should be greater than or equal to 2
########################################################
int Solution::anytwo(string A) {
    //its nothing but like lcs , with slight differnce
    
    //we will take same two string. dp[i][j] represnt lcs ending with index 'i' on string 1 and 
    //ending with index j of string 2
    //element of chice--> if charcter at index mathces A[i]==B[j] and i!=j than include it. 1+dp[i-1][j-1]
    //2: else take maximim of two thing max(dp[i-1][j], dp[i][j-1])
    
    int n=A.size();
    
  vector<vector<int>>  dp(n+1, vector<int>(n+1,0));//+1 for 0th row and col
  
   for(int i=0;i<=n;i++)
     for(int j=0;j<=n;j++)
     {
         if(i==0 || j==0)dp[i][j]=0;
         
         else
         if(A[i-1]==A[j-1] && i!=j)
         {
             dp[i][j]=dp[i-1][j-1] +1;
         }
         else
          dp[i][j]=max(dp[i-1][j], dp[i][j-1]);
     }
     
    //now check if dp[i][j]  store value>0

      return dp[n][n]>1 ? 1:0;
}
