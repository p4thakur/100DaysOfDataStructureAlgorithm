
Given an integer A, we call k >= 2 a good base of A, if all digits of A base k are 1. Now given
a string representing A, you should return the smallest good base of A in string format.
############################################3

string Solution::solve(string A) {
    
    long num=stol(A);
    //base with minimum value will contain maximum number of 1s.for us minum base is 2. 
    //and base num-1 will have minium number of 1.(2 ones).
    //so my range for number of 1s  is between 2 to log2(num)
    //we will treverf in reverse because base with minimum value will have maxium num of one
    for(int i=log(num)/log(2) ;i>=2 ;i--)
    {
        long low=2;//indicate base 2
        long high=num-1;//indicate base=num-1
        
        while(low<=high)
        {
            long mid=low+(high-low)/2;
            
            long sum=0;//store value i can for with 'i' number of 1s and base=mid i.e (111..itime)base(mid)
            long currans=1;
            for(int j=0;j<i;j++)
            {
                sum=sum+currans;
                currans*=mid;//ex: 2^0+ 2^1 +2^3....
            }
            
            if(sum<num)low=mid+1;
            
            else if(sum>num)high=mid-1;
            
            else//if this base with i number if 1 gives me good base than this will be the smallest good base.
             return to_string(mid);
        }
    }
    //a number can always be form using base num-1 (11)num-1
    return to_string(num-1);
}


